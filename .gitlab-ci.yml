buildx:
  image: docker:19.03-git
  stage: buildx
  variables:
    GIT_STRATEGY: none
  artifacts:
    paths:
      - buildx
    expire_in: 1 hour
  services:
    - docker:19.03-dind
  script:
    - export DOCKER_BUILDKIT=1
    - git clone git://github.com/docker/buildx ./docker-buildx
    - docker build --platform=local -o . ./docker-buildx

deploy:
  image: docker:19.03
  stage: deploy
  services:
    - name: docker:19.03-dind
      command: ["--experimental"]
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - mv buildx ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker buildx create --use --name mybuilder
    - docker buildx build --platform linux/amd64,linux/arm64 --push -t $CI_REGISTRY_IMAGE .

build:
  image: "$CI_REGISTRY_IMAGE"
  stage: build
  before_script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get -qq -y install wget tar make git patch xz-utils gcc bc xxd gcc-aarch64-linux-gnu build-essential bison flex python3 python3-distutils python3-dev swig python python-dev kmod
    - mkdir ./build
  script:
    - export CROSS_COMPILE=aarch64-linux-gnu- && export ARCH=arm64 && export CPUS=$(nproc)
    - ./l4t_kernel_prep_rel32.sh ./build
  artifacts:
    paths:
      - ./build/Image
      - ./build/tegra210-icosa.dtb
      - ./build/modules.tar.gz
      - ./build/update.tar.gz
